/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.26
 * Generated at: 2022-11-21 09:17:48 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.member.view;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class joinForm_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>회원가입화면</title>\r\n");
      out.write("<link href=\"../css/style.css\" rel=\"stylesheet\" type=\"text/css\">\r\n");
      out.write("<script>\r\n");
      out.write("	window.onload = function(){\r\n");
      out.write("		//년도를 가져온다.\r\n");
      out.write("		let date = new Date();\r\n");
      out.write("		let year = date.getFullYear(); //현재 년도를 가져온다.\r\n");
      out.write("		for(let i=1960; i<=year; i++){\r\n");
      out.write("			//add:Option에 데이터 추가\r\n");
      out.write("			//Option(): select박스 option을 추가\r\n");
      out.write("			document.forms[0].birthyy.add(new Option(i,i));  \r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	//필수입력정보, 정규화식...등 체크하는 함수\r\n");
      out.write("	function checkValue(){\r\n");
      out.write("		if(!document.userinfo.id.value){\r\n");
      out.write("			alert(\"아이디를 입력하세요!\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}		\r\n");
      out.write("		if(document.userinfo.password.value != document.userinfo.passwordcheck.value){\r\n");
      out.write("			alert(\"비밀번호를 동일하게 입력하세요!\");\r\n");
      out.write("			return false;\r\n");
      out.write("		}\r\n");
      out.write("		return true;\r\n");
      out.write("	}\r\n");
      out.write("	//우편번호 검색 화면을 OPEN하는 함수\r\n");
      out.write("	function zipSearch(){  //search라는 파라미터에 n을 넣어서?\r\n");
      out.write("		url = \"../pro/zipSearch.jsp?search=n\"; //?search=n : zipSearch.jsp화면 오픈시에 넘기는 파라미터\r\n");
      out.write("		//window.open(url:새창으로 보여질 주소, zipCodeSearch:열릴 창의 이름, 속성지정);\r\n");
      out.write("		window.open(url, \"zipCodeSearch\", \"width=500, height=300, scrollbars=yes\");\r\n");
      out.write("	}	\r\n");
      out.write("	\r\n");
      out.write("	//아이디 중복 버튼을 click했을때 실행되는 함수.\r\n");
      out.write("	function openIdCheck(){\r\n");
      out.write("		let id = document.userinfo.id.value;\r\n");
      out.write("		url=\"../pro/idCheckPro.jsp?id=\" + id;\r\n");
      out.write("		window.open(url, \"idCheckForm\", \"width=800, height=400, resizable=no, scrollbars=no\");\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div id=\"wrap\">\r\n");
      out.write("		<br><br>\r\n");
      out.write("		<b><font size=\"6\" color=\"gray\">회원가입</font></b>\r\n");
      out.write("		<br><br><br>\r\n");
      out.write("		<!-- onsubmit이벤트가 발생하면 checkValue()함수가 실행되고 true값을 리턴받으면 action이 실행됨 -->\r\n");
      out.write("		<form method=\"post\" action=\"../pro/joinPro.jsp\" name=\"userinfo\" onsubmit=\"return checkValue()\">\r\n");
      out.write("			<table>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">아이디</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"id\" maxlength=\"20\">\r\n");
      out.write("						<input type=\"button\" value=\"중복확인\" onclick=\"openIdCheck()\">					\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">비밀번호</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"password\" name=\"password\" maxlength=\"15\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">비밀번호 확인</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"password\" name=\"passwordcheck\" maxlength=\"15\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">이름</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"name\" maxlength=\"40\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">성별</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"남\" checked>남\r\n");
      out.write("						<input type=\"radio\" name=\"gender\" value=\"여\">여\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">생일</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<!-- <input type=\"text\" name=\"birthyy\" maxlength=\"4\" placeholder=\"년(4자)\" size=\"6\"> -->\r\n");
      out.write("						<select name=\"birthyy\">\r\n");
      out.write("							<option value=\"#\">년도선택</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<select name=\"birthmm\">\r\n");
      out.write("							<option value=\"\">월</option>\r\n");
      out.write("							<option value=\"01\">1</option>\r\n");
      out.write("							<option value=\"02\">2</option>\r\n");
      out.write("							<option value=\"03\">3</option>\r\n");
      out.write("							<option value=\"04\">4</option>\r\n");
      out.write("							<option value=\"05\">5</option>\r\n");
      out.write("							<option value=\"06\">6</option>\r\n");
      out.write("							<option value=\"07\">7</option>\r\n");
      out.write("							<option value=\"08\">8</option>\r\n");
      out.write("							<option value=\"09\">9</option>\r\n");
      out.write("							<option value=\"10\">10</option>\r\n");
      out.write("							<option value=\"11\">11</option>\r\n");
      out.write("							<option value=\"12\">12</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<input type=\"text\" name=\"birthdd\" maxlength=\"2\" placeholder=\"일\" size=\"4\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">이메일</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"email1\" maxlength=\"30\">@\r\n");
      out.write("						<select name=\"email2\">\r\n");
      out.write("							<option>naver.com</option>\r\n");
      out.write("							<option>daum.net</option>\r\n");
      out.write("							<option>gmail.com</option>\r\n");
      out.write("							<option>nate.com</option>\r\n");
      out.write("						</select>\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">휴대전화</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" name=\"phone\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">우편번호</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input name=\"zipcode\" size=\"5\" readonly>\r\n");
      out.write("						<!-- 우편번호 찾기 버튼 클릭시에 zipSearch()함수 실행 -->\r\n");
      out.write("						<input type=\"button\" value=\"우편번호 찾기\" onclick=\"zipSearch()\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("				<tr>\r\n");
      out.write("					<td id=\"title\">주소</td>\r\n");
      out.write("					<td>\r\n");
      out.write("						<input type=\"text\" size=\"50\" name=\"address\">\r\n");
      out.write("					</td>\r\n");
      out.write("				</tr>\r\n");
      out.write("			</table>\r\n");
      out.write("			<br>\r\n");
      out.write("			<input type=\"submit\" value=\"가입\">\r\n");
      out.write("			<input type=\"button\" value=\"취소\" onclick=\"location.href='mainForm.jsp'\">\r\n");
      out.write("		</form>\r\n");
      out.write("		\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
